{
    "$schema": "vendor/infection/infection/resources/schema.json",
    "source": {
        "directories": [
            "src",
            "public"
        ],
        "excludes": [
            "Migrations",
            "PostgresRepository",
            "Module.php",
            "QueryExecutor"
        ]
    },
    "mutators": {
        "@default": true,
        "LogicalAndAllSubExprNegation": {
            ignore: [
                "Ramona\\Ras2\\SharedCore\\Infrastructure\\Serialization\\Normalizer"
            ]
        },
        "CastString": {
            ignore: [
                "Ramona\\Ras2\\SharedCore\\Infrastructure\\Serialization\\Normalizer",
                "Ramona\\Ras2\\SharedCore\\Infrastructure\\Serialization\\ConversionNotFound",
                "Ramona\\Ras2\\SharedCore\\Infrastructure\\Hydration\\Hydrator\\DateTimeImmutableHydrator"
            ]
        },
        "CastInt": {
            ignore: [
                "Ramona\\Ras2\\Task\\Application\\HttpApi\\GetTasks",
                "Ramona\\Ras2\\Event\\Application\\HttpApi\\GetEvents"
            ]
        },
        "FalseValue": {
            ignore: [
                "Ramona\\Ras2\\Task\\Business\\Started"
            ]
        },
        "MethodCallRemoval": {
            "ignore": [
                "Ramona\\Ras2\\SharedCore\\Infrastructure\\Serialization\\DefaultDeserializer",
                "Ramona\\Ras2\\SharedCore\\Infrastructure\\Serialization\\DefaultSerializer"
            ]
        },
        "ArrayItemRemoval": {
            "ignore": [
                "Ramona\\Ras2\\SharedCore\\Infrastructure\\Serialization\\DefaultDeserializer",
                "Ramona\\Ras2\\SharedCore\\Infrastructure\\Serialization\\DefaultSerializer"
            ]
        },
        "GreaterThan": {
            "ignore": [
                "Ramona\\Ras2\\SharedCore\\Infrastructure\\Hydration\\Hydrator\\ObjectHydrator"
            ]
        },
        "UnwrapArrayUnique": {
            "ignore": [
                "Ramona\\Ras2\\SharedCore\\Infrastructure\\HTTP\\APIDefinition\\APIRouter"
            ]
        }
    },
    "logs": {
        "text": "infection.log"
    }
}